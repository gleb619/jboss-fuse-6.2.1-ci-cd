server {
    listen 80;
    server_name site1.example.com;

    auth_basic "closed website";
    auth_basic_user_file authnginx/htpasswd;

    location /esb/ {
       proxy_pass http://192.168.1.113:8080/api/;
       include /etc/nginx/conf.d/proxy.conf;
       proxy_redirect / /;
       #proxy_intercept_errors on;
       error_page 301 302 307 = @handle_redirects;
    }

    location @handle_redirects {
       #set $orig_loc $upstream_http_location;
       #proxy_pass $orig_loc;

       set $original_uri $uri;
       set $orig_loc $upstream_http_location;

       #proxy_pass $orig_loc;
       #proxy_cache       steam;
       #proxy_cache_key $original_uri;
       #proxy_cache_valid 200 206 3000h;
    }

}

# Default
#server {
#  listen 80 default_server;

#  server_name _;
#  root /var/www/html;

#  charset UTF-8;

#  error_page 404 /backend-not-found.html;
#  location = /backend-not-found.html {
#    allow   all;
#  }
#  location / {
#    return 404;
#  }
#}


#location /some/path/ {
#    proxy_pass http://192.168.1.24/; # note the trailing slash!
#}
#location / {
#    error_page 404 = @404;
#    return 404; # this would normally be `try_files` first
#}
#location @404 {
#    add_header Vary Referer; # sadly, no effect on 404
#    if ($http_referer ~ ://[^/]*(/some/path|/the/other)/) {
#        return 302 $1$uri;
#    }
#    return 404 "Not Found\n";
#}